// load scheduler
loadi(50,63);
loadi(51,64);

// timer int

loadi(4, 17);
loadi(5, 18);

//load library

loadi(63,13);
loadi(64,14);

// init

loadi(65,7);
loadi(66,8);

// user prog
loadi(84,69);

//user prog2
loadi(90,70);

// int 10

loadi(22,35);
loadi(23,36);

// exhandler

loadi(2, 15);
loadi(3, 16);


// int 7

loadi(16,29);
loadi(17,30);

//init program
//library
PTBR = PAGE_TABLE_BASE + 20;
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = "64";
[PTBR+3] = "0100";

//heap

[PTBR+4] = 76;
[PTBR+5] = "0110";
[PTBR+6] = 77;
[PTBR+7] = "0110";


//init

[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//stack

[PTBR+16] = 78;
[PTBR+17] = "0110";
[PTBR+18] = 79;
[PTBR+19] = "0110";

[78*512] = [65*512+1];

// user program
PTBR = PAGE_TABLE_BASE + 40;

// library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

// heap
[PTBR + 4] = 82;
[PTBR + 5] = "0110";
[PTBR + 6] = 83;
[PTBR + 7] = "0110";

// code
[PTBR + 8] = 84;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0000";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

// stack
[PTBR + 16] = 85;
[PTBR + 17] = "0110";
[PTBR + 18] = 86;
[PTBR + 19] = "0110";

[85*512] = [84*512+1];

// user program 2
PTBR = PAGE_TABLE_BASE + 60;

// library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

// heap
[PTBR + 4] = 88;
[PTBR + 5] = "0110";
[PTBR + 6] = 89;
[PTBR + 7] = "0110";

// code
[PTBR + 8] = 90;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0000";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

// stack
[PTBR + 16] = 91;
[PTBR + 17] = "0110";
[PTBR + 18] = 92;
[PTBR + 19] = "0110";

[91*512] = [90*512+1];

// init entry in process table
[PROCESS_TABLE + 17] = 1;
[PROCESS_TABLE + 20] = CREATED;
[PROCESS_TABLE + 27] = 80;
[PROCESS_TABLE + 29] = 8*512;
[PROCESS_TABLE + 28] = 0;
[PROCESS_TABLE + 30] = PAGE_TABLE_BASE+20;
[PROCESS_TABLE + 31] = 10;

// user program in process table
[PROCESS_TABLE + 33] = 2;
[PROCESS_TABLE + 36] = CREATED;
[PROCESS_TABLE + 43] = 87;
[PROCESS_TABLE + 45] = 8*512;
[PROCESS_TABLE + 44] = 0;
[PROCESS_TABLE + 46] = PAGE_TABLE_BASE+40;
[PROCESS_TABLE + 47] = 10;

// user program 2 in process table
[PROCESS_TABLE + 49] = 3;
[PROCESS_TABLE + 52] = CREATED;
[PROCESS_TABLE + 59] = 93;
[PROCESS_TABLE + 61] = 8*512;
[PROCESS_TABLE + 60] = 0;
[PROCESS_TABLE + 62] = PAGE_TABLE_BASE+60;
[PROCESS_TABLE + 63] = 10;

//setting all other process as terminated
[PROCESS_TABLE + 68] = TERMINATED;
[PROCESS_TABLE + 84] = TERMINATED;
[PROCESS_TABLE + 100] = TERMINATED;
[PROCESS_TABLE + 116] = TERMINATED;
[PROCESS_TABLE + 132] = TERMINATED;
[PROCESS_TABLE + 148] = TERMINATED;
[PROCESS_TABLE + 164] = TERMINATED;
[PROCESS_TABLE + 180] = TERMINATED;
[PROCESS_TABLE + 196] = TERMINATED;
[PROCESS_TABLE + 212] = TERMINATED;
[PROCESS_TABLE + 228] = TERMINATED;
[PROCESS_TABLE + 244] = TERMINATED;

return;
